plugins {
    id "java-library"
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenCentral()
}

def
        selenideVersion = "5.20.1",
        junitVersion = "5.7.1",
        allureVersion = "2.13.8",
        aspectjweaverVersion = "1.9.6",
        javafakerVersion = "1.0.2",
        slf4jVersion = "1.7.30",
        ownerVersion = "1.0.12",
        automatedowlVersion = "1.0.0"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.slf4j:slf4j-log4j12:$slf4jVersion",
            "com.github.automatedowl:allure-environment-writer:$automatedowlVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties = System.properties
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task positive_tests(type: Test) {
    useJUnitPlatform {
        includeTags "positive"
    }
}

task negative_tests(type: Test) {
    useJUnitPlatform {
        includeTags "negative"
    }
}

test {
    useJUnitPlatform()
}